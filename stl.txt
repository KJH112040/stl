
Concepts library (C++20)

Diagnostics library

Assertions − System error (C++11)
Exception types − Error numbers
basic_stacktrace (C++23)
Debugging support (C++26)

Memory management library

Allocators − Smart pointers
Memory resources (C++17)

Metaprogramming library (C++11)

Type traits − ratio
integer_sequence (C++14)

General utilities library

Function objects − hash (C++11)
Swap − Type operations (C++11)
Integer comparison (C++20)
pair − tuple (C++11)
optional (C++17)
expected (C++23)
variant (C++17) − any (C++17)
bitset − Bit manipulation (C++20)

Containers library

vector − deque − array (C++11)
list − forward_list (C++11)
inplace_vector (C++26)
hive (C++26)
map − multimap − set − multiset
unordered_map (C++11)
unordered_multimap (C++11)
unordered_set (C++11)
unordered_multiset (C++11)
Container adaptors
span (C++20) − mdspan (C++23)

Iterators library

Ranges library (C++20)

Range factories − Range adaptors
generator (C++23)

Algorithms library

Numeric algorithms
Execution policies (C++17)
Constrained algorithms (C++20)

Strings library

basic_string − char_traits
basic_string_view (C++17)

Text processing library

Primitive numeric conversions (C++17)
Formatting (C++20) − Localization
text_encoding (C++26)
Regular expressions (C++11)
    basic_regex − Algorithms
    Default regular expression grammar
Null-terminated sequence utilities:
    byte − multibyte − wide

Numerics library

Common math functions
Mathematical special functions (C++17)
Mathematical constants (C++20)
Basic linear algebra algorithms (C++26)
Data-parallel types (SIMD) (C++26)
Pseudo-random number generation
Floating-point environment (C++11)
complex − valarray




사용자 정의 자료형 ----- 다음(목요일)에 c++때 뭐 배웠는지


special func
깊은 복사
유사한 방식으로 코딩 ------ 연산자 오버로딩

객체들의 집합
객체------------사용자 정의 자료형으로 만들어진 메모리의 ?
객체 만드는 동작 ------- 인스턴싱?

stl은 객체 지향 언어x 제네릭 프로그래밍o


stl 핵심 키워드!!!!!!!!!! 템플릿 -----------------------> 수업의 시작점, 템플릿 복습

다형성 핵심 키워드!!!!!!!!!! virtual


템플릿으로 string을 만들진 않겠지만, 더 깊게? string쓸? 엄,


c++reference, c++ core guidelines, (youtube) cpp con 

10년 이상 족보가 있다고? 와 어케 받나요,,,

17.13.2
17.13 이상의 버전 깔거나 업데이트


아까 선배님들 면접 질문?으로 동기/비동기 내용 있었는데, 이론 등에 대해 얘기하는 것보다 동기/비동기 차이점을 실제 구현해서 뭐가 더 나아서 이걸 썼다? 이런식으로.


반복자--------------------디자인 패턴